define(['./types'{?.files},{/.files} {#.files}'../{.name}.d/types'{/.files}{@sep}, {/sep}], function (
           types {?.files},{/.files} {#.files}file{.id}{/.files}{@sep}, {/sep}) {

/* Code generator request imports -> members of `files`s up to their enclosing file.
 * Every member of this data structure should get incorporated into the owner of
 * `imports.js`.
 * {
 *     files : [{
 *         id : 129,
 *         name : 'name used to import (prefix `../` for code generation)',
 *         resources : [id1, id2, id3, ...]
 *     }, ...]
 * }
 */
    {!
     ! Could just merge file{id} instead of enumerating resources.  Check how
     ! difficult either strategy is before deciding.
     !}
    var scope = {
        {#.files}
            {#.resources fileId=.id}
                {.id} : file{fileId}.{.}{@sep},{/sep}
            {/.resources}
            {@sep},{/sep}
        {/.files}
    };

    for (var id in types) {
        scope[id] = types[id];
    }

    return scope;
});
