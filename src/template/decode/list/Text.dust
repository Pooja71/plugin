var List = require('./UInt8');
var decode = require('text-encoding').TextDecoder('utf-8').decode;

module.exports = function Text(segments, segment, begin, length) {
    List.call(this, segments, segment, begin, length);
};

Text.prototype = new List();

Object.defineProperty(Text.prototype, 'length', {
    get : function () { return this.__length - 1; },
    set : function (value) { throw new Error('Readonly'); }
});

Text.prototype.get = function () {
    return decode(this.getRaw());
};

Text.prototype.getRaw = function () {
    return this.__segment.subarray(this.__begin, this.__begin+this.__length-1);
};

Text.prototype.getRawNulled = function () {
    return this.__segment.subarray(this.__begin, this.__begin+this.__length);
};

Text.deref = {>"far/deref" derefType="list"/}
    {<derefReturns}
        new Text(
            segments,
            targetSegment,
            start,
            {>"list/cardinality" segment="segment" pointer="pointer"/})
    {/derefReturns}
