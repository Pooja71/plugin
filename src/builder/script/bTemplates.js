var dust = require("capnp-js-plugin-dust");(function(){dust.register("bScope",body_0);function body_0(chk,ctx){return chk.write("define(['./bTypes'").exists(ctx.getPath(true, ["imports"]),ctx,{"block":body_1},{}).write("], function (types ").exists(ctx.getPath(true, ["imports"]),ctx,{"block":body_2},{}).write(") {var scope = {};var id;").section(ctx.getPath(true, ["imports"]),ctx,{"block":body_5},{}).write("for (id in types) {scope[id] = types[id];}return scope;});");}function body_1(chk,ctx){return chk.write(",").helper("imports",ctx,{},{"file":"bTypes"});}function body_2(chk,ctx){return chk.write(",").section(ctx.getPath(true, ["imports"]),ctx,{"block":body_3},{});}function body_3(chk,ctx){return chk.write("file").reference(ctx.get(["$idx"], false),ctx,"h").helper("sep",ctx,{"block":body_4},{});}function body_4(chk,ctx){return chk.write(",");}function body_5(chk,ctx){return chk.write("for (id in file").reference(ctx.get(["$idx"], false),ctx,"h").write(") {scope[id] = file").reference(ctx.get(["$idx"], false),ctx,"h").write("[id];}");}return body_0;})();
(function(){dust.register("bTypes",body_0);function body_0(chk,ctx){return chk.write("define(['capnp-js/builder/index'], function (base) {var types = {};").section(ctx.getPath(true, ["nodes"]),ctx,{"block":body_1},{}).write("return types;});");}function body_1(chk,ctx){return chk.partial("types/structure",ctx,{}).partial("types/enumeration",ctx,{"recurTarget":"struct"});}return body_0;})();
(function(){dust.register("builders",body_0);function body_0(chk,ctx){return chk.write("define(['capnp-js/builder/index', 'capnp-js/reader/index', './rScope', './bScope', './constants', './readers'], function (builder,                  reader,           rScope,      scope,     constants) {/** Loading `readers` guarantees that reader prototypes have been populated.* Imagine using a builder, `b`:  If the underlying data is shared read-only* by `b.asReader()`, then the prototype of this reader would not have been* initialized unless some external code imported `readers`.*/var builders = {};").section(ctx.getPath(true, ["nodes"]),ctx,{"block":body_1},{}).write("return builders;});");}function body_1(chk,ctx){return chk.helper("eq",ctx,{"else":body_2,"block":body_3},{"key":ctx.getPath(true, ["meta"]),"value":"const"});}function body_2(chk,ctx){return chk.write("builders.").reference(ctx.getPath(true, ["name"]),ctx,"h").write(" = ").partial("builders/node",ctx,{}).write(";");}function body_3(chk,ctx){return chk.write("builders.").helper("constant",ctx,{},{"name":ctx.getPath(true, ["name"])}).write(" = ").partial("builders/node",ctx,{}).write(";");}return body_0;})();
(function(){dust.register("builders/dataField",body_0);function body_0(chk,ctx){return chk.write("Structure.prototype.").helper("fieldGetter",ctx,{},{"name":ctx.getPath(true, ["name"])}).write(" = function () {").partial("throwOnInactive",ctx,{"error":"Attempted to access an inactive union member"}).write("var position = this._dataSection +").helper("math",ctx,{},{"key":ctx.getPath(true, ["offset"]),"method":"multiply","operand":ctx.get(["byteCount"], false)}).write(";return ").reference(ctx.get(["decoder"], false),ctx,"h").write(".").reference(ctx.get(["method"], false),ctx,"h").write("(").reference(ctx.get(["default"], false),ctx,"h").write(", this._segment, position);};Structure.prototype.").helper("fieldSetter",ctx,{},{"name":ctx.getPath(true, ["name"])}).write(" = function (value) {").partial("builders/setDiscriminant",ctx,{}).write("var position = this._dataSection +").helper("math",ctx,{},{"key":ctx.getPath(true, ["offset"]),"method":"multiply","operand":ctx.get(["byteCount"], false)}).write(";").reference(ctx.get(["encoder"], false),ctx,"h").write(".").reference(ctx.get(["method"], false),ctx,"h").write("(value, ").reference(ctx.get(["default"], false),ctx,"h").write(", this._segment, position);};");}return body_0;})();
(function(){dust.register("builders/floatField",body_0);function body_0(chk,ctx){return chk.write("/** This goofiness can be removed once a speedy alternative to DataView* shenanigans exist for serializing Float32 and Float64.*/var decoder_").helper("fieldGetter",ctx,{},{"name":ctx.getPath(true, ["name"])}).write(" = ").reference(ctx.get(["decoder"], false),ctx,"h").write(".").reference(ctx.get(["method"], false),ctx,"h").write(";var default_").helper("fieldGetter",ctx,{},{"name":ctx.getPath(true, ["name"])}).write(" = fromBase64(\"").reference(ctx.getPath(true, ["defaultBytes"]),ctx,"h").write("\");Structure.prototype.").helper("fieldGetter",ctx,{},{"name":ctx.getPath(true, ["name"])}).write(" = function () {").partial("throwOnInactive",ctx,{"error":"Attempted to access an inactive union member"}).write("var position = this._dataSection +").helper("math",ctx,{},{"key":ctx.getPath(true, ["offset"]),"method":"multiply","operand":ctx.get(["byteCount"], false)}).write(";return decoder_").helper("fieldGetter",ctx,{},{"name":ctx.getPath(true, ["name"])}).write("(default_").helper("fieldGetter",ctx,{},{"name":ctx.getPath(true, ["name"])}).write(",this._segment,position);};var encoder_").helper("fieldGetter",ctx,{},{"name":ctx.getPath(true, ["name"])}).write(" = ").reference(ctx.get(["encoder"], false),ctx,"h").write(".").reference(ctx.get(["method"], false),ctx,"h").write(";Structure.prototype.").helper("fieldGetter",ctx,{},{"name":ctx.getPath(true, ["name"])}).write(" = function (value) {").partial("builders/setDiscriminant",ctx,{}).write("var position = this._dataSection +").helper("math",ctx,{},{"key":ctx.getPath(true, ["offset"]),"method":"multiply","operand":ctx.get(["byteCount"], false)}).write(";encoder_").helper("fieldGetter",ctx,{},{"name":ctx.getPath(true, ["name"])}).write("(value,default_").helper("fieldGetter",ctx,{},{"name":ctx.getPath(true, ["name"])}).write(",this._segment,position);};");}return body_0;})();
(function(){dust.register("builders/list",body_0);function body_0(chk,ctx){return chk.exists(ctx.getPath(true, ["type","meta"]),ctx,{"else":body_1,"block":body_2},{});}function body_1(chk,ctx){return chk.write("builder.lists.").reference(ctx.getPath(true, ["type"]),ctx,"h");}function body_2(chk,ctx){return chk.section(ctx.getPath(true, ["type"]),ctx,{"block":body_3},{});}function body_3(chk,ctx){return chk.helper("eq",ctx,{"block":body_4},{"key":ctx.getPath(true, ["meta"]),"value":"list"}).helper("eq",ctx,{"block":body_5},{"key":ctx.getPath(true, ["meta"]),"value":"struct"});}function body_4(chk,ctx){return chk.write("builder.lists.pointer(").partial("builders/list",ctx,{}).write(")");}function body_5(chk,ctx){return chk.write("builder.lists.structure(scope['").reference(ctx.getPath(true, ["id"]),ctx,"h").write("'])");}return body_0;})();
(function(){dust.register("builders/listField",body_0);function body_0(chk,ctx){return chk.write("Structure.prototype.").helper("fieldGetter",ctx,{},{"name":ctx.getPath(true, ["name"])}).write(" = function () {").partial("throwOnInactive",ctx,{"error":"Attempted to access an inactive union member"}).write("var pointer = {segment : this._segment,position : this._pointersSection +").helper("math",ctx,{},{"key":ctx.getPath(true, ["offset"]),"method":"multiply","operand":"8"}).write("};if (reader.isNull(this._segment, position)) {builder.copy.pointer.deep(this._defaults.").reference(ctx.getPath(true, ["name"]),ctx,"h").write(",this._arena,pointer);}return builder.lists.").reference(ctx.getPath(true, ["type"]),ctx,"h").write(".deref(this._arena,pointer,this._depth + 1);};");}return body_0;})();
(function(){dust.register("builders/node",body_0);function body_0(chk,ctx){return chk.helper("eq",ctx,{"block":body_1},{"key":ctx.getPath(true, ["meta"]),"value":"struct"}).helper("eq",ctx,{"block":body_2},{"key":ctx.getPath(true, ["meta"]),"value":"enum"}).helper("eq",ctx,{"block":body_3},{"key":ctx.getPath(true, ["meta"]),"value":"const"});}function body_1(chk,ctx){return chk.partial("builders/structure",ctx,{});}function body_2(chk,ctx){return chk.write("scope['").reference(ctx.getPath(true, ["id"]),ctx,"h").write("']");}function body_3(chk,ctx){return chk.write("constants['").reference(ctx.getPath(true, ["id"]),ctx,"h").write("']");}return body_0;})();
(function(){dust.register("builders/setDiscriminant",body_0);function body_0(chk,ctx){return chk.helper("ne",ctx,{"block":body_1},{"key":ctx.getPath(true, ["discriminantValue"]),"value":65535});}function body_1(chk,ctx){return chk.write("this._setWhich(").reference(ctx.getPath(true, ["discriminantValue"]),ctx,"h").write(");");}return body_0;})();
(function(){dust.register("builders/structure",body_0);function body_0(chk,ctx){return chk.write("(function () {var Structure =").notexists(ctx.getPath(true, ["meta"]),ctx,{"else":body_1,"block":body_3},{}).write("Structure._Reader = rScope['").reference(ctx.getPath(true, ["id"]),ctx,"h").write("'];Structure.prototype._defaults = Structure._Reader.prototype._defaults;").section(ctx.getPath(true, ["nodes"]),ctx,{"block":body_4},{}).exists(ctx.getPath(true, ["discriminantCount"]),ctx,{"block":body_8},{}).section(ctx.getPath(true, ["fields"]),ctx,{"block":body_10},{}).write("return Structure;})()");}function body_1(chk,ctx){return chk.helper("eq",ctx,{"block":body_2},{"key":ctx.getPath(true, ["meta"]),"value":"struct"});}function body_2(chk,ctx){return chk.write("scope['").reference(ctx.getPath(true, ["id"]),ctx,"h").write("'];");}function body_3(chk,ctx){return chk.write("builder.structure();");}function body_4(chk,ctx){return chk.helper("eq",ctx,{"block":body_5},{"key":ctx.getPath(true, ["meta"]),"value":"struct"}).helper("eq",ctx,{"block":body_6},{"key":ctx.getPath(true, ["meta"]),"value":"enum"}).helper("eq",ctx,{"block":body_7},{"key":ctx.getPath(true, ["meta"]),"value":"const"});}function body_5(chk,ctx){return chk.write("Structure.").reference(ctx.getPath(true, ["name"]),ctx,"h").write(" = ").partial("builders/node",ctx,{}).write(";");}function body_6(chk,ctx){return chk.write("Structure.").reference(ctx.getPath(true, ["name"]),ctx,"h").write(" = ").partial("builders/node",ctx,{}).write(";");}function body_7(chk,ctx){return chk.write("Structure.prototype.").helper("constant",ctx,{},{"name":ctx.getPath(true, ["name"])}).write(" = Structure.").helper("constant",ctx,{},{"name":ctx.getPath(true, ["name"])}).write(" = ").partial("builders/node",ctx,{}).write(";");}function body_8(chk,ctx){return chk.helper("gt",ctx,{"block":body_9},{"key":ctx.getPath(true, ["discriminantCount"]),"value":0});}function body_9(chk,ctx){return chk.write("Structure.prototype.which = function () {return reader.primitives.uint16(this._segment,this._dataSection +").helper("math",ctx,{},{"key":ctx.getPath(true, ["discriminantOffset"]),"method":"multiply","operand":"2"}).write(");};Structure.prototype._setWhich = function (discriminant) {").partial("builders/zeroUnion",ctx,{"zero":"builder.zero"}).write("var position = this._dataSection +").helper("math",ctx,{},{"key":ctx.getPath(true, ["discriminantOffset"]),"method":"multiply","operand":"2"}).write(";builder.primitives.uint16(discriminant, this._segment, position);};");}function body_10(chk,ctx){return chk.helper("ne",ctx,{"block":body_11},{"key":ctx.getPath(true, ["discriminantValue"]),"value":65535}).exists(ctx.getPath(true, ["meta"]),ctx,{"else":body_12,"block":body_30},{});}function body_11(chk,ctx){return chk.write("Structure.prototype.").helper("fieldIser",ctx,{},{"name":ctx.getPath(true, ["name"])}).write(" = function () {return this.which() === ").reference(ctx.getPath(true, ["discriminantValue"]),ctx,"h").write(";};Structure.prototype.").helper("constant",ctx,{},{"name":ctx.getPath(true, ["name"])}).write(" = ").reference(ctx.getPath(true, ["discriminantValue"]),ctx,"h").write(";");}function body_12(chk,ctx){return chk.helper("eq",ctx,{"block":body_13},{"key":ctx.getPath(true, ["type"]),"value":"group"}).helper("eq",ctx,{"block":body_14},{"key":ctx.getPath(true, ["type"]),"value":"Data"}).helper("eq",ctx,{"block":body_15},{"key":ctx.getPath(true, ["type"]),"value":"Text"}).helper("eq",ctx,{"block":body_16},{"key":ctx.getPath(true, ["type"]),"value":"AnyPointer"}).helper("eq",ctx,{"block":body_17},{"key":ctx.getPath(true, ["type"]),"value":"Void"}).helper("eq",ctx,{"block":body_18},{"key":ctx.getPath(true, ["type"]),"value":"Bool"}).section(ctx.getPath(true, []),ctx,{"block":body_19},{"decoder":"reader.fields","encoder":"builder.fields"});}function body_13(chk,ctx){return chk.write("var Group_").reference(ctx.getPath(true, ["name"]),ctx,"h").write(" = ").partial("builders/structure",ctx,{}).write(";Structure.prototype.").helper("fieldGetter",ctx,{},{"name":ctx.getPath(true, ["name"])}).write(" = function () {").partial("throwOnInactive",ctx,{"error":"Attempted to access an inactive union member"}).write("return new Group_").helper("fieldGetter",ctx,{},{"name":ctx.getPath(true, ["name"])}).write("(this._arena,this._depth,this._layout());};Structure.prototype.").helper("fieldIniter",ctx,{},{"name":ctx.getPath(true, ["name"])}).write(" = function () {").partial("builders/setDiscriminant",ctx,{}).write("return new Builder_").reference(ctx.getPath(true, ["name"]),ctx,"h").write("(this._arena,this._depth + 1,this._layout());};");}function body_14(chk,ctx){return chk.partial("builders/listField",ctx,{});}function body_15(chk,ctx){return chk.partial("builders/listField",ctx,{});}function body_16(chk,ctx){return chk.write("Structure.prototype.").helper("fieldGetter",ctx,{},{"name":ctx.getPath(true, ["name"])}).write(" = function () {").partial("throwOnInactive",ctx,{"error":"Attempted to access an inactive union member"}).write("var pointer = {segment : this._segment,position : this._pointersSection +").helper("math",ctx,{},{"key":ctx.getPath(true, ["offset"]),"method":"multiply","operand":"8"}).write("};return builder.AnyPointer.deref(this._arena,pointer,this._depth + 1);};Structure.prototype.").helper("fieldSetter",ctx,{},{"name":ctx.getPath(true, ["name"])}).write(" = function (reader) {").partial("builders/setDiscriminant",ctx,{}).write("var pointer = {segment : this._segment,position : this._pointersSection +").helper("math",ctx,{},{"key":ctx.getPath(true, ["offset"]),"method":"multiply","operand":"8"}).write("};if (reader._TYPE === builder.AnyPointer._TYPE) {builder.copy.pointer.any(reader._arena,reader._pointer,this._arena, pointer);} else {builder.copy.pointer.deep(reader, this._arena, pointer);}};");}function body_17(chk,ctx){return chk.write("Structure.prototype.").helper("fieldGetter",ctx,{},{"name":ctx.getPath(true, ["name"])}).write(" = function () {").partial("throwOnInactive",ctx,{"error":"Attempted to access an inactive union member"}).write("return null;};Structure.prototype.").helper("fieldSetter",ctx,{},{"name":ctx.getPath(true, ["name"])}).write(" = function () {").partial("builders/setDiscriminant",ctx,{}).write("};");}function body_18(chk,ctx){return chk.write("Structure.prototype.").helper("fieldGetter",ctx,{},{"name":ctx.getPath(true, ["name"])}).write(" = function () {").partial("throwOnInactive",ctx,{"error":"Attempted to access an inactive union member"}).write("var position = this._dataSection + ").helper("boolOffset",ctx,{},{"offset":ctx.getPath(true, ["offset"])}).write(";return reader.fields.bool(").reference(ctx.getPath(true, ["defaultValue"]),ctx,"h").write(",this._segment,position,").helper("boolMask",ctx,{},{"offset":ctx.getPath(true, ["offset"])}).write(");};Structure.prototype.").helper("fieldSetter",ctx,{},{"name":ctx.getPath(true, ["name"])}).write(" = function (value) {").partial("builders/setDiscriminant",ctx,{}).write("var position = this._dataSection + ").helper("boolOffset",ctx,{},{"offset":ctx.getPath(true, ["offset"])}).write(";reader.fields.bool(value,").reference(ctx.getPath(true, ["defaultValue"]),ctx,"h").write(",this._segment,position,").helper("boolMask",ctx,{},{"offset":ctx.getPath(true, ["offset"])}).write(");};");}function body_19(chk,ctx){return chk.helper("eq",ctx,{"block":body_20},{"key":ctx.getPath(true, ["type"]),"value":"Int8"}).helper("eq",ctx,{"block":body_21},{"key":ctx.getPath(true, ["type"]),"value":"Int16"}).helper("eq",ctx,{"block":body_22},{"key":ctx.getPath(true, ["type"]),"value":"Int32"}).helper("eq",ctx,{"block":body_23},{"key":ctx.getPath(true, ["type"]),"value":"Int64"}).helper("eq",ctx,{"block":body_24},{"key":ctx.getPath(true, ["type"]),"value":"UInt8"}).helper("eq",ctx,{"block":body_25},{"key":ctx.getPath(true, ["type"]),"value":"UInt16"}).helper("eq",ctx,{"block":body_26},{"key":ctx.getPath(true, ["type"]),"value":"UInt32"}).helper("eq",ctx,{"block":body_27},{"key":ctx.getPath(true, ["type"]),"value":"UInt64"}).helper("eq",ctx,{"block":body_28},{"key":ctx.getPath(true, ["type"]),"value":"Float32"}).helper("eq",ctx,{"block":body_29},{"key":ctx.getPath(true, ["type"]),"value":"Float64"});}function body_20(chk,ctx){return chk.partial("builders/dataField",ctx,{"default":ctx.getPath(true, ["defaultValue"]),"method":"int8","byteCount":"1"});}function body_21(chk,ctx){return chk.partial("builders/dataField",ctx,{"default":ctx.getPath(true, ["defaultValue"]),"method":"int16","byteCount":"2"});}function body_22(chk,ctx){return chk.partial("builders/dataField",ctx,{"default":ctx.getPath(true, ["defaultValue"]),"method":"int32","byteCount":"4"});}function body_23(chk,ctx){return chk.partial("builders/dataField",ctx,{"default":ctx.getPath(true, ["defaultValue"]),"method":"int64","byteCount":"8"});}function body_24(chk,ctx){return chk.partial("builders/dataField",ctx,{"default":ctx.getPath(true, ["defaultValue"]),"method":"uint8","byteCount":"1"});}function body_25(chk,ctx){return chk.partial("builders/dataField",ctx,{"default":ctx.getPath(true, ["defaultValue"]),"method":"uint16","byteCount":"2"});}function body_26(chk,ctx){return chk.partial("builders/dataField",ctx,{"default":ctx.getPath(true, ["defaultValue"]),"method":"uint32","byteCount":"4"});}function body_27(chk,ctx){return chk.partial("builders/dataField",ctx,{"default":ctx.getPath(true, ["defaultValue"]),"method":"uint64","byteCount":"8"});}function body_28(chk,ctx){return chk.partial("builders/floatField",ctx,{"method":"float32","byteCount":"4"});}function body_29(chk,ctx){return chk.partial("builders/floatField",ctx,{"method":"float64","byteCount":"8"});}function body_30(chk,ctx){return chk.helper("eq",ctx,{"else":body_31,"block":body_35},{"key":ctx.getPath(true, ["meta"]),"value":"enum"});}function body_31(chk,ctx){return chk.helper("eq",ctx,{"block":body_32},{"key":ctx.getPath(true, ["meta"]),"value":"struct"}).helper("eq",ctx,{"block":body_33},{"key":ctx.getPath(true, ["meta"]),"value":"list"}).write("Structure.prototype.").helper("fieldGetter",ctx,{},{"name":ctx.getPath(true, ["name"])}).write(" = function () {").partial("throwOnInactive",ctx,{"error":"Attempted to access an inactive union member"}).write("var pointer = {segment : this._segment,position : this._pointersSection +").helper("math",ctx,{},{"key":ctx.getPath(true, ["offset"]),"method":"multiply","operand":"8"}).write("};if (reader.isNull(this._segment, position)) {builder.copy.pointer.deep(this._defaults.").reference(ctx.getPath(true, ["name"]),ctx,"h").write(",this._arena,pointer);}return Builder_").reference(ctx.getPath(true, ["name"]),ctx,"h").write(".deref(this._arena,pointer,this._depth + 1);};Structure.prototype.").helper("fieldSetter",ctx,{},{"name":ctx.getPath(true, ["name"])}).write(" = function (reader) {").partial("builders/setDiscriminant",ctx,{}).write("var pointer = {segment : this._segment,position : this._pointersSection + ").helper("math",ctx,{},{"key":ctx.getPath(true, ["offset"]),"method":"multiply","operand":"8"}).write("};copy.pointer.deep(reader,this._arena,pointer);};Structure.prototype.").helper("fieldHaser",ctx,{},{"name":ctx.getPath(true, ["name"])}).write(" = function () {var position = this._pointersSection +").helper("math",ctx,{},{"key":ctx.getPath(true, ["offset"]),"method":"multiply","operand":"8"}).write(";return (").helper("ne",ctx,{"block":body_34},{"key":ctx.getPath(true, ["discriminantValue"]),"value":65535}).write("!reader.isNull(this._segment, position));};");}function body_32(chk,ctx){return chk.write("var Builder_").reference(ctx.getPath(true, ["name"]),ctx,"h").write(" = scope['").reference(ctx.getPath(true, ["id"]),ctx,"h").write("'];Structure.prototype.").helper("fieldIniter",ctx,{},{"name":ctx.getPath(true, ["name"])}).write(" = function () {").partial("builders/setDiscriminant",ctx,{}).write("var pointer = {segment : this._segment,position : this._pointersSection +").helper("math",ctx,{},{"key":ctx.getPath(true, ["offset"]),"method":"multiply","operand":"8"}).write("};return Builder_").reference(ctx.getPath(true, ["name"]),ctx,"h").write(".init(this._arena,pointer,this._depth + 1);};");}function body_33(chk,ctx){return chk.write("var Builder_").reference(ctx.getPath(true, ["name"]),ctx,"h").write(" = ").partial("builders/list",ctx,{}).write(";Structure.prototype.").helper("fieldIniter",ctx,{},{"name":ctx.getPath(true, ["name"])}).write(" = function (cardinality) {").partial("builders/setDiscriminant",ctx,{}).write("var pointer = {segment : this._segment,position : this._pointersSection +").helper("math",ctx,{},{"key":ctx.getPath(true, ["offset"]),"method":"multiply","operand":"8"}).write("};return Builder_").reference(ctx.getPath(true, ["name"]),ctx,"h").write(".init(this._arena,pointer,cardinality,this._depth + 1);};");}function body_34(chk,ctx){return chk.write("this.").helper("fieldIser",ctx,{},{"name":ctx.getPath(true, ["name"])}).write("()&&");}function body_35(chk,ctx){return chk.partial("builders/dataField",ctx,{"default":ctx.getPath(true, ["defaultValue"]),"decoder":"reader.fields","encoder":"builder.fields","method":"uint16","byteCount":"2"});}return body_0;})();
(function(){dust.register("builders/zeroUnion",body_0);function body_0(chk,ctx){return chk.helper("partial",ctx,{"bits":body_1,"block":body_2},{}).helper("partial",ctx,{"bytes":body_3,"block":body_4},{}).helper("partial",ctx,{"pointers":body_5,"block":body_6},{});}function body_1(chk,ctx){return chk.helper("unionBits",ctx,{},{"fields":ctx.getPath(true, ["fields"])});}function body_2(chk,ctx){return chk.write("builders/union/bit");}function body_3(chk,ctx){return chk.helper("unionBytes",ctx,{},{"fields":ctx.getPath(true, ["fields"])});}function body_4(chk,ctx){return chk.write("builders/union/nonbit");}function body_5(chk,ctx){return chk.helper("unionPointers",ctx,{},{"fields":ctx.getPath(true, ["fields"])});}function body_6(chk,ctx){return chk.write("builders/union/pointer");}return body_0;})();
(function(){dust.register("builders/union/bit",body_0);function body_0(chk,ctx){return chk.section(ctx.get(["bits"], false),ctx,{"block":body_1},{});}function body_1(chk,ctx){return chk.write("this._maskData(").reference(ctx.get(["position"], false),ctx,"h").write(", ").reference(ctx.get(["mask"], false),ctx,"h").write(");");}return body_0;})();
(function(){dust.register("builders/union/nonbit",body_0);function body_0(chk,ctx){return chk.section(ctx.get(["bytes"], false),ctx,{"block":body_1},{});}function body_1(chk,ctx){return chk.write("this._zeroData(").reference(ctx.get(["position"], false),ctx,"h").write(", ").reference(ctx.get(["length"], false),ctx,"h").write(");");}return body_0;})();
(function(){dust.register("builders/union/pointer",body_0);function body_0(chk,ctx){return chk.section(ctx.get(["pointers"], false),ctx,{"block":body_1},{});}function body_1(chk,ctx){return chk.reference(ctx.get(["zero"], false),ctx,"h").write(".pointer(this._arena,{segment : this._segment,position : this._pointersSection + ").reference(ctx.getPath(true, []),ctx,"h").write("});");}return body_0;})();
(function(){dust.register("builders/union/range",body_0);function body_0(chk,ctx){return chk.helper("math",ctx,{},{"key":ctx.getPath(true, ["offset"]),"method":"multiply","operand":ctx.get(["byteCount"], false)}).write(":").reference(ctx.get(["byteCount"], false),ctx,"h");}return body_0;})();