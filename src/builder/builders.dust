define(['capnp-js/builder/index', 'capnp-js/reader/index', './rScope', './bScope', './constants', './readers'], function (
                  builder,                  reader,           rScope,      scope,     constants) {

    /*
     * Loading `readers` guarantees that reader prototypes have been populated.
     * Imagine using a builder, `b`:  If the underlying data is shared read-only
     * by `b.asReader()`, then the prototype of this reader would not have been
     * initialized unless some external code imported `readers`.
     */

    {!
     ! Compiler dumps `./rpc.js` and `./rpcMethods.js.stub` (stubbed out RPC
     ! methods).  The `./rpcMethods.js` file gets imported by `./rpc.js`.
     !}

    {! Populate prototypes and assign pet-names. !}

    var builders = {};

    {#.nodes}
        {@eq key=.meta value="const"}
            builders.{@constant name=.name/} = {>"builders/node"/};
        {:else}
            builders.{.name} = {>"builders/node"/};
        {/eq}
    {/.nodes}

    return builders;
});
