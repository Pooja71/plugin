{!
 ! A call to `_memoize` induces `_memoize` calls for all of the branch's generic
 ! parameters, even if the initiating call returned a memoized value.  Maybe the
 ! `parameters` array should be wrapped in a closure to avoid these calls?
 !}

{?.generic}
    {#.generic}
        {?.scopeDistance}
            {current}
                {@repeat times=.scopeDistance}._PARENT{/repeat}
                {#.path}
                    .{.name}
                    {?.parameters}.{>"generic/bind" parent=current/}{/.parameters}
                {/.path}
        {:else}
            {#.path[0]}{index}["{.id}"].{>"generic/bind" parent="null"/}{/.path[0]}
            {@provide}
                {#.nonroot}
                    .{name}
                    {?.parameters}.{>"generic/bind"/}{/.parameters}
                {/.nonroot}
            {:nonroot}
                {@slice arr=.path begin=1/}
            {/provide}
        {/.scopeDistance}
    {/.generic}
{:else}
    {?.meta}
        {@eq key=.meta value="struct"}{index}["{.id}"]{/eq}
        {@eq key=.meta value="enum"}{index}["{.id}"]{/eq}
        {@eq key=.meta value="list"}
            {@eq key=source value="reader"}{>"readers/list"/}{/eq}
            {@eq key=source value="builder"}{>"builders/list"/}{/eq}
        {/eq}
    {:else}
        {@eq key=source value="reader"}reader.{.type}{/eq}
        {@eq key=source value="builder"}builder.{.type}{/eq}
    {/.meta}
{/.generic}
